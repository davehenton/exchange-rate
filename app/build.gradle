apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

project.ext {
    support_version = '25.3.1'
    firebase_version = '10.2.4'
    dagger_version = '2.10'
    retrofit_version = '2.3.0'
}

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.0"

    defaultConfig {
        applicationId "com.exchangerate"
        minSdkVersion 19
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            buildConfigField "String", "EXCHANGE_RATE_API_KEY", getExchangeRateApiKey()
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            buildConfigField 'String', 'EXCHANGE_RATE_API_KEY', getExchangeRateApiKey()
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        main.java.srcDirs += 'src/test/kotlin'
        main.java.srcDirs += 'src/androidTest/kotlin'
    }
}

kapt {
    generateStubs = true
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    // ANDROID
    compile "com.android.support:appcompat-v7:$support_version"
    compile "com.android.support:recyclerview-v7:$support_version"
    compile 'com.android.support.constraint:constraint-layout:1.0.2'

    // REACTIVE
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    compile 'io.reactivex.rxjava2:rxjava:2.1.0'
    compile 'com.jakewharton.rxbinding2:rxbinding:2.0.0'

    // FIREBASE
    compile "com.google.firebase:firebase-core:$firebase_version"
    compile "com.google.firebase:firebase-crash:$firebase_version"

    // KOTLIN
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    // DAGGER
    compile "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    // RETROFIT
    compile "com.squareup.retrofit2:retrofit:$retrofit_version"
    compile "com.squareup.retrofit2:converter-gson:$retrofit_version"
    compile "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    compile 'com.squareup.okhttp3:logging-interceptor:3.8.1'

    // TEST
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:2.7.22'
}

def getExchangeRateApiKey() {
    def props = new Properties()
    file("$rootDir/keys/private.properties").withInputStream { props.load(it) }
    return "\"" + props.get("EXCHANGE_RATE_APP_API_KEY") + "\""
}